/**
 * generated by Xtext 2.10.0
 */
package kcl.ac.uk.xtext.annotationsStores.impl;

import kcl.ac.uk.xtext.annotationsStores.AnnotationsStoresPackage;
import kcl.ac.uk.xtext.annotationsStores.Effect;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Effect</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link kcl.ac.uk.xtext.annotationsStores.impl.EffectImpl#getAffectedBy <em>Affected By</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EffectImpl extends MinimalEObjectImpl.Container implements Effect
{
  /**
   * The default value of the '{@link #getAffectedBy() <em>Affected By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAffectedBy()
   * @generated
   * @ordered
   */
  protected static final String AFFECTED_BY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAffectedBy() <em>Affected By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAffectedBy()
   * @generated
   * @ordered
   */
  protected String affectedBy = AFFECTED_BY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EffectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnnotationsStoresPackage.Literals.EFFECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAffectedBy()
  {
    return affectedBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAffectedBy(String newAffectedBy)
  {
    String oldAffectedBy = affectedBy;
    affectedBy = newAffectedBy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnnotationsStoresPackage.EFFECT__AFFECTED_BY, oldAffectedBy, affectedBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnnotationsStoresPackage.EFFECT__AFFECTED_BY:
        return getAffectedBy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnnotationsStoresPackage.EFFECT__AFFECTED_BY:
        setAffectedBy((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnnotationsStoresPackage.EFFECT__AFFECTED_BY:
        setAffectedBy(AFFECTED_BY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnnotationsStoresPackage.EFFECT__AFFECTED_BY:
        return AFFECTED_BY_EDEFAULT == null ? affectedBy != null : !AFFECTED_BY_EDEFAULT.equals(affectedBy);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (affectedBy: ");
    result.append(affectedBy);
    result.append(')');
    return result.toString();
  }

} //EffectImpl
