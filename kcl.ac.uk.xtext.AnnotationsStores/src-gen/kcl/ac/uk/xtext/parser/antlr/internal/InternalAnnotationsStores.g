/*
 * generated by Xtext 2.10.0
 */
grammar InternalAnnotationsStores;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package kcl.ac.uk.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package kcl.ac.uk.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import kcl.ac.uk.xtext.services.AnnotationsStoresGrammarAccess;

}

@parser::members {

 	private AnnotationsStoresGrammarAccess grammarAccess;

    public InternalAnnotationsStoresParser(TokenStream input, AnnotationsStoresGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "AnnotationStores";
   	}

   	@Override
   	protected AnnotationsStoresGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAnnotationStores
entryRuleAnnotationStores returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationStoresRule()); }
	iv_ruleAnnotationStores=ruleAnnotationStores
	{ $current=$iv_ruleAnnotationStores.current; }
	EOF;

// Rule AnnotationStores
ruleAnnotationStores returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationStoresAccess().getProposalElementsProposalStoreParserRuleCall_0_0());
				}
				lv_proposalElements_0_0=ruleProposalStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationStoresRule());
					}
					add(
						$current,
						"proposalElements",
						lv_proposalElements_0_0,
						"kcl.ac.uk.xtext.AnnotationsStores.ProposalStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationStoresAccess().getQuestionElementsQuestionStoreParserRuleCall_1_0());
				}
				lv_questionElements_1_0=ruleQuestionStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationStoresRule());
					}
					add(
						$current,
						"questionElements",
						lv_questionElements_1_0,
						"kcl.ac.uk.xtext.AnnotationsStores.QuestionStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationStoresAccess().getChallengeElementsChallengeStoreParserRuleCall_2_0());
				}
				lv_challengeElements_2_0=ruleChallengeStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationStoresRule());
					}
					add(
						$current,
						"challengeElements",
						lv_challengeElements_2_0,
						"kcl.ac.uk.xtext.AnnotationsStores.ChallengeStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationStoresAccess().getCommitmentElementsCommitmentStoreParserRuleCall_3_0());
				}
				lv_commitmentElements_3_0=ruleCommitmentStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationStoresRule());
					}
					add(
						$current,
						"commitmentElements",
						lv_commitmentElements_3_0,
						"kcl.ac.uk.xtext.AnnotationsStores.CommitmentStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationStoresAccess().getArgumentElementsArgumentStoreParserRuleCall_4_0());
				}
				lv_argumentElements_4_0=ruleArgumentStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationStoresRule());
					}
					add(
						$current,
						"argumentElements",
						lv_argumentElements_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.ArgumentStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProposalStore
entryRuleProposalStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProposalStoreRule()); }
	iv_ruleProposalStore=ruleProposalStore
	{ $current=$iv_ruleProposalStore.current; }
	EOF;

// Rule ProposalStore
ruleProposalStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='proposalElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getProposalStoreAccess().getProposalElementKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProposalStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getProposalStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProposalStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getProposalStoreAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProposalStoreAccess().getScopeScopeParserRuleCall_4_0());
				}
				lv_scope_4_0=ruleScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProposalStoreRule());
					}
					set(
						$current,
						"scope",
						lv_scope_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Scope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getProposalStoreAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProposalStoreAccess().getFocusFocusParserRuleCall_6_0());
				}
				lv_focus_6_0=ruleFocus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProposalStoreRule());
					}
					set(
						$current,
						"focus",
						lv_focus_6_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Focus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getProposalStoreAccess().getCommaKeyword_7());
		}
		(
			(
				lv_content_8_0=RULE_STRING
				{
					newLeafNode(lv_content_8_0, grammarAccess.getProposalStoreAccess().getContentSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProposalStoreRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getProposalStoreAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleQuestionStore
entryRuleQuestionStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionStoreRule()); }
	iv_ruleQuestionStore=ruleQuestionStore
	{ $current=$iv_ruleQuestionStore.current; }
	EOF;

// Rule QuestionStore
ruleQuestionStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='questionElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuestionStoreAccess().getQuestionElementKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getQuestionStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getQuestionStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getQuestionStoreAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionStoreAccess().getSenderSenderParserRuleCall_4_0());
				}
				lv_sender_4_0=ruleSender
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionStoreRule());
					}
					set(
						$current,
						"sender",
						lv_sender_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Sender");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getQuestionStoreAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionStoreAccess().getScopeScopeParserRuleCall_6_0());
				}
				lv_scope_6_0=ruleScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionStoreRule());
					}
					set(
						$current,
						"scope",
						lv_scope_6_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Scope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getQuestionStoreAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionStoreAccess().getFocusFocusParserRuleCall_8_0());
				}
				lv_focus_8_0=ruleFocus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionStoreRule());
					}
					set(
						$current,
						"focus",
						lv_focus_8_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Focus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getQuestionStoreAccess().getCommaKeyword_9());
		}
		(
			(
				lv_content_10_0=RULE_STRING
				{
					newLeafNode(lv_content_10_0, grammarAccess.getQuestionStoreAccess().getContentSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionStoreRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getQuestionStoreAccess().getRightParenthesisKeyword_11());
		}
	)
;

// Entry rule entryRuleChallengeStore
entryRuleChallengeStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChallengeStoreRule()); }
	iv_ruleChallengeStore=ruleChallengeStore
	{ $current=$iv_ruleChallengeStore.current; }
	EOF;

// Rule ChallengeStore
ruleChallengeStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='challengeElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getChallengeStoreAccess().getChallengeElementKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getChallengeStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getChallengeStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChallengeStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getChallengeStoreAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChallengeStoreAccess().getSenderSenderParserRuleCall_4_0());
				}
				lv_sender_4_0=ruleSender
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChallengeStoreRule());
					}
					set(
						$current,
						"sender",
						lv_sender_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Sender");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getChallengeStoreAccess().getCommaKeyword_5_0());
			}
			(
				(
					lv_target_6_0=RULE_ID
					{
						newLeafNode(lv_target_6_0, grammarAccess.getChallengeStoreAccess().getTargetIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChallengeStoreRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getChallengeStoreAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleCommitmentStore
entryRuleCommitmentStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommitmentStoreRule()); }
	iv_ruleCommitmentStore=ruleCommitmentStore
	{ $current=$iv_ruleCommitmentStore.current; }
	EOF;

// Rule CommitmentStore
ruleCommitmentStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='commitmentElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommitmentStoreAccess().getCommitmentElementKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCommitmentStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCommitmentStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommitmentStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getCommitmentStoreAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommitmentStoreAccess().getScopeScopeParserRuleCall_4_0());
				}
				lv_scope_4_0=ruleScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommitmentStoreRule());
					}
					set(
						$current,
						"scope",
						lv_scope_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Scope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getCommitmentStoreAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommitmentStoreAccess().getFocusFocusParserRuleCall_6_0());
				}
				lv_focus_6_0=ruleFocus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommitmentStoreRule());
					}
					set(
						$current,
						"focus",
						lv_focus_6_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Focus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getCommitmentStoreAccess().getCommaKeyword_7());
		}
		(
			(
				lv_content_8_0=RULE_STRING
				{
					newLeafNode(lv_content_8_0, grammarAccess.getCommitmentStoreAccess().getContentSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommitmentStoreRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getCommitmentStoreAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleArgumentStore
entryRuleArgumentStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentStoreRule()); }
	iv_ruleArgumentStore=ruleArgumentStore
	{ $current=$iv_ruleArgumentStore.current; }
	EOF;

// Rule ArgumentStore
ruleArgumentStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='argumentElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getArgumentStoreAccess().getArgumentElementKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentStoreAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getArgumentStoreAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgumentStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getArgumentStoreAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentStoreAccess().getScopeScopeParserRuleCall_4_0());
				}
				lv_scope_4_0=ruleScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentStoreRule());
					}
					set(
						$current,
						"scope",
						lv_scope_4_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Scope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getArgumentStoreAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentStoreAccess().getFocusFocusParserRuleCall_6_0());
				}
				lv_focus_6_0=ruleFocus
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentStoreRule());
					}
					set(
						$current,
						"focus",
						lv_focus_6_0,
						"kcl.ac.uk.xtext.AnnotationsStores.Focus");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getArgumentStoreAccess().getCommaKeyword_7());
		}
		(
			(
				lv_content_8_0=RULE_STRING
				{
					newLeafNode(lv_content_8_0, grammarAccess.getArgumentStoreAccess().getContentSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgumentStoreRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getArgumentStoreAccess().getCommaKeyword_9_0());
			}
			(
				(
					lv_target_10_0=RULE_ID
					{
						newLeafNode(lv_target_10_0, grammarAccess.getArgumentStoreAccess().getTargetIDTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArgumentStoreRule());
						}
						setWithLastConsumed(
							$current,
							"target",
							lv_target_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getArgumentStoreAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleScope
entryRuleScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeRule()); }
	iv_ruleScope=ruleScope
	{ $current=$iv_ruleScope.current; }
	EOF;

// Rule Scope
ruleScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_scope_0_1='feature'
				{
					newLeafNode(lv_scope_0_1, grammarAccess.getScopeAccess().getScopeFeatureKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeRule());
					}
					setWithLastConsumed($current, "scope", lv_scope_0_1, null);
				}
				    |
				lv_scope_0_2='rating'
				{
					newLeafNode(lv_scope_0_2, grammarAccess.getScopeAccess().getScopeRatingKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeRule());
					}
					setWithLastConsumed($current, "scope", lv_scope_0_2, null);
				}
				    |
				lv_scope_0_3='criteria'
				{
					newLeafNode(lv_scope_0_3, grammarAccess.getScopeAccess().getScopeCriteriaKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeRule());
					}
					setWithLastConsumed($current, "scope", lv_scope_0_3, null);
				}
				    |
				lv_scope_0_4='topic'
				{
					newLeafNode(lv_scope_0_4, grammarAccess.getScopeAccess().getScopeTopicKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopeRule());
					}
					setWithLastConsumed($current, "scope", lv_scope_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleFocus
entryRuleFocus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFocusRule()); }
	iv_ruleFocus=ruleFocus
	{ $current=$iv_ruleFocus.current; }
	EOF;

// Rule Focus
ruleFocus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_focus_0_1='R'
				{
					newLeafNode(lv_focus_0_1, grammarAccess.getFocusAccess().getFocusRKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFocusRule());
					}
					setWithLastConsumed($current, "focus", lv_focus_0_1, null);
				}
				    |
				lv_focus_0_2='S'
				{
					newLeafNode(lv_focus_0_2, grammarAccess.getFocusAccess().getFocusSKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFocusRule());
					}
					setWithLastConsumed($current, "focus", lv_focus_0_2, null);
				}
				    |
				lv_focus_0_3='G'
				{
					newLeafNode(lv_focus_0_3, grammarAccess.getFocusAccess().getFocusGKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFocusRule());
					}
					setWithLastConsumed($current, "focus", lv_focus_0_3, null);
				}
				    |
				lv_focus_0_4='V'
				{
					newLeafNode(lv_focus_0_4, grammarAccess.getFocusAccess().getFocusVKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFocusRule());
					}
					setWithLastConsumed($current, "focus", lv_focus_0_4, null);
				}
				    |
				lv_focus_0_5='A'
				{
					newLeafNode(lv_focus_0_5, grammarAccess.getFocusAccess().getFocusAKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFocusRule());
					}
					setWithLastConsumed($current, "focus", lv_focus_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSender
entryRuleSender returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSenderRule()); }
	iv_ruleSender=ruleSender
	{ $current=$iv_ruleSender.current.getText(); }
	EOF;

// Rule Sender
ruleSender returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getSenderAccess().getINTTerminalRuleCall());
		}
	)+
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
