/**
 * generated by Xtext 2.10.0
 */
package kcl.ac.uk.xtext.videoAnnotationsDSL.impl;

import kcl.ac.uk.xtext.videoAnnotationsDSL.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class VideoAnnotationsDSLFactoryImpl extends EFactoryImpl implements VideoAnnotationsDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static VideoAnnotationsDSLFactory init()
  {
    try
    {
      VideoAnnotationsDSLFactory theVideoAnnotationsDSLFactory = (VideoAnnotationsDSLFactory)EPackage.Registry.INSTANCE.getEFactory(VideoAnnotationsDSLPackage.eNS_URI);
      if (theVideoAnnotationsDSLFactory != null)
      {
        return theVideoAnnotationsDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new VideoAnnotationsDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VideoAnnotationsDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case VideoAnnotationsDSLPackage.ANNOTATED_VIDEO: return createAnnotatedVideo();
      case VideoAnnotationsDSLPackage.ANNOTATION: return createAnnotation();
      case VideoAnnotationsDSLPackage.MOVE: return createMove();
      case VideoAnnotationsDSLPackage.SCOPE: return createScope();
      case VideoAnnotationsDSLPackage.FOCUS: return createFocus();
      case VideoAnnotationsDSLPackage.TIME: return createTime();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnnotatedVideo createAnnotatedVideo()
  {
    AnnotatedVideoImpl annotatedVideo = new AnnotatedVideoImpl();
    return annotatedVideo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Annotation createAnnotation()
  {
    AnnotationImpl annotation = new AnnotationImpl();
    return annotation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Move createMove()
  {
    MoveImpl move = new MoveImpl();
    return move;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Scope createScope()
  {
    ScopeImpl scope = new ScopeImpl();
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Focus createFocus()
  {
    FocusImpl focus = new FocusImpl();
    return focus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Time createTime()
  {
    TimeImpl time = new TimeImpl();
    return time;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VideoAnnotationsDSLPackage getVideoAnnotationsDSLPackage()
  {
    return (VideoAnnotationsDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static VideoAnnotationsDSLPackage getPackage()
  {
    return VideoAnnotationsDSLPackage.eINSTANCE;
  }

} //VideoAnnotationsDSLFactoryImpl
